###############################################################################
#
# Based on the example config file from the btrbk project.
# https://github.com/digint/btrbk
#
# This file, unlike the rest of the repo, are GPL 3.0 rather than AGPL 3.0
#
# Copyright (C) 2014-2023 Axel Burri
# Copyright (C) 2025 Jonathan Hull
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###############################################################################

#
# Example btrbk configuration file
#
#
# Please refer to the btrbk.conf(5) man-page for a complete
# description of all configuration options.
# For more examples, see README.md included with this package.
#
#   btrbk.conf(5): <https://digint.ch/btrbk/doc/btrbk.conf.5.html>
#   README.md:     <https://digint.ch/btrbk/doc/readme.html>
#
# Note that the options can be overridden per volume/subvolume/target
# in the corresponding sections.
#


# Enable transaction log
transaction_log		{{ btrbk_transaction_log | default("/var/log/btrbk.log") }}

# Use long timestamp format (includes hour/minute)
timestamp_format        {{ btrbk_timestamp_format | default("long") }}

# Enable stream buffer. Adding a buffer between the sending and
# receiving side is generally a good idea.
# NOTE: If enabled, make sure to install the "mbuffer" package!
stream_buffer		{{ btrbk_stream_buffer | default("256m") }}
stream_buffer_remote	{{ btrbk_stream_buffer_remote | default("500m") }}

# Directory in which the btrfs snapshots are created. Relative to
# <volume-directory> of the volume section.
# If not set, the snapshots are created in <volume-directory>.
#
# If you want to set a custom name for the snapshot (and backups),
# use the "snapshot_name" option within the subvolume section.
#
# NOTE: btrbk does not autmatically create this directory, and the
# snapshot creation will fail if it is not present.
#
snapshot_dir            {{ btrbk_snapshot_dir | default("_btrbk_snap") }}

# Always create snapshots. Set this to "ondemand" to only create
# snapshots if the target volume is reachable. Set this to "no" if
# snapshot creation is done by another instance of btrbk.
snapshot_create         {{ btrkbk_snapshot_create | default("always") }}

# Perform incremental backups (set to "strict" if you want to prevent
# creation of non-incremental backups if no parent is found).
incremental             {{ btrbk_incremental | default("yes") }}

# Specify after what time (in full hours after midnight) backups/
# snapshots are considered as a daily backup/snapshot
preserve_hour_of_day    {{ btrbk_preserve_hour_of_day | default("3") }}

# Specify on which day of week weekly/monthly backups are to be
# preserved.
preserve_day_of_week    {{ btrbk_preserve_day_of_week | default("sunday") }}

# Preserve all snapshots for a minimum period of time.
snapshot_preserve_min   {{ btrbk_snapshot_preserve_min | default("1d") }}

# Retention policy for the source snapshots.
#snapshot_preserve          <NN>h <NN>d <NN>w <NN>m <NN>y
snapshot_preserve       {{ btrbk_snapshot_preserve | default("24h 7d 2w 0m 0y") }}

# Preserve all backup targets for a minimum period of time.
target_preserve_min     {{ btrbk_target_preserve_min | default("no") }}

# Retention policy for backup targets:
#target_preserve         <NN>h <NN>d <NN>w <NN>m <NN>y
target_preserve         {{ btrbk_target_preserve | default("0h 14d 5w 1m 1y") }}

# Retention policy for archives ("btrbk archive" command):
archive_preserve_min    {{ btrbk_archive_preserve_min | default("no") }}
#archive_preserve        <NN>h <NN>d <NN>w <NN>m <NN>y
archive_preserve	{{ btrbk_archive_preserve | default("0h 1d 1w 1m 1y") }}

# Specify SSH private key for "ssh://" volumes / targets:
#ssh_user                   root
#ssh_compression            no
#ssh_cipher_spec            default
ssh_identity		{{ btrbk_ssh_identity | default("/etc/btrbk/ssh/id_ed25519") }}
ssh_user		{{ btrbk_ssh_user | default("root") }}
ssh_compression		{{ btrbk_ssh_compression | default("no") }}
ssh_cipher_spec		{{ btrbk_ssh_cipher_spec | default("default") }}

# Enable compression for remote btrfs send/receive operations:
stream_compress		{{ btrbk_stream_compress | default("no") }}
stream_compress_level	{{ btrbk_stream_compress_level | default("default") }}
stream_compress_threads	{{ btrbk_stream_compress_threads | default("default") }}
{% if stream_compress_adapt is defined %}
stream_compress_adapt	{{ btrbk_stream_compress_adapt | default("default") }}
{% endif %}

# Enable lock file support: Ensures that only one instance of btrbk
# can be run at a time.
lockfile		{{ btrbk_lockfile | default("/var/lock/btrbk.lock") }}
# Don't wait for transaction commit on deletion. Set this to "after"
# or "each" to make sure the deletion of subvolumes is committed to
# disk when btrbk terminates.
btrfs_commit_delete	{{ btrbk_btrfs_commit_delete | default("no") }}

#
# Volume section: "volume <volume-directory>"
#
#   <volume-directory>  Directory of a btrfs volume (or subvolume)
#                       containing the subvolume to be backuped
#                       (usually the mount-point of a btrfs filesystem
#                       mounted with subvolid=5 option)
#
# Subvolume section: "subvolume <subvolume-name>"
#
#   <subvolume-name>    Subvolume to be backuped, relative to
#                       <volume-directory> in volume section.
#
# Target section: "target <type> <volume-directory>"
#
#   <type>              (optional) type, defaults to "send-receive".
#   <volume-directory>  Directory of a btrfs volume (or subvolume)
#                       receiving the backups.
#
# NOTE: The parser does not care about indentation, this is only for
# human readability. The options always apply to the last section
# encountered, overriding the corresponding option of the upper
# section. This means that the global options must be set before any
# "volume" section.
#

{% for vol in btrbk_volumes %}
volume {{ vol.name }}
{% if vol.target is defined %}
  target {{ vol.target }}
{% endif %}
{% for subvol in vol.subvolumes %}
  subvolume {{ subvol }}
{% endfor %}

{% endfor %}
